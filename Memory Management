Buffer Types:
  Pool Memory 
  Host Memory
  Device Memory
  
What kind of objects allocted in Pool Memory:
  Command Buffers - VkCommandPool
  Descriptor Sets - VkDescriptorPool
  Queries - VkQueryPool
 
Memory pools can only handle fixed sized memory allocations and avoids problems like memory fragmentation that happens with
variable size of allocations. They are single threaded memory allocators and they are not thread safe so you need 
to allocate one pool per thread. Vulkan keeps track of pool allocations and has ability to do bulk reset returning all allocations back
to the pool.

How to create and destroy pools:
  Command Buffers - VkCreateCommandPool/VkDestroyCommandPool
  Descriptor Sets - VkCreateDescriptorPool/VkDestroyDescriptorPool
  Queries - VkCreateQueryPool/VkDestroyQueryPool

What command pools are used for:
  Command pools are used for to help track of command buffers.
  There are several flags used when creating command pool:
    VK_COMMAND_POOL_CREATE_TRANSIENT_BIT - command buffers from the pool be short-lived perhaps for a single frame or single que submission
    VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT - command buffers from the pool can be individually reset. When the reset command
    buffer bit is set you can reset individual command buffers with VkResetCommandBuffer. Command buffers also implicitly reset by calling
    VkBeginCommandBuffer. Also, you can bulk reset by calling VkResetCommandPool.
    Make sure you actually done doing with that command buffer before resetting
    
 What Descriptor Pool are used for:
  There are several flags used when creating descriptor pool:
    VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT - allows descriptor allocations to return to the pool individually
    Allocate individual sets: VkAllocateDescriptorSets
    Free individual sets: VkFreeDescriptorSets
    Reseting pool: VkResetDescriptorPool
    
 Queries:
  Queries are very small in memory and homogeneous. Often just a 64-bit integer per query. It does not make sense
  to manage them individually. So Vulkan API allows them to be allocated in pools in contiguous allocations. When
  creating queries there aren't any creation flags like for other pools. You just need to specify which
  query type pool is going to allocate.
  Query types: Occlusion, Pipeline Statistics, Timestamp
  Begin using: VkCmdBeginQuery
  End using: VkCmdEndQuery
  Resetting : VkCmdResetQueryPool
